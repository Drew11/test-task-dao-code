{"version":3,"sources":["helpers/utils.js","components/Temperature/Temperature.js","components/Weather/Weather.js","components/Search/Search.js","components/Slider/Slider.js","assets/icons/error.svg","components/Error/Error.js","components/Spinner/Spinner.js","api/index.js","components/App/App.js","index.js"],"names":["formatUnits","temp","getStatusTemperature","Temperature","props","tempMax","tempMin","humidity","wind","clouds","className","data-status","toFixed","Weather","weather","temperature","srcWeatherIcon","icon","srcCountryIcon","sys","country","toLocaleLowerCase","src","alt","name","description","main","temp_min","temp_max","speed","all","coord","lat","lon","Search","setSearchQuery","useState","query","setQuery","type","value","onChange","event","target","onKeyDown","code","placeholder","useStyles","makeStyles","root","width","marginRight","marginTop","marks","label","DiscreteSlider","setTemperature","classes","Typography","id","gutterBottom","Slider","min","max","step","scale","x","valueLabelFormat","toLocaleString","newValue","valueLabelDisplay","aria-labelledby","Error","error","Spinner","openWeatherApiKey","ApiService","_baseUrl","getWeatherByQuery","a","url","getData","getWeatherByCoords","coords","_getWeatherRequestUrl","latitude","longitude","this","axios","get","response","data","message","App","service","setWeather","setError","searchQuery","loading","setLoading","onError","onFetch","fn","params","then","Number","catch","useEffect","navigator","geolocation","getCurrentPosition","position","errorView","weatherView","sliderView","spinnerView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f78afa43.chunk.js","sourcesContent":["export function formatUnits (temp) {\r\n    return temp + '\\xB0C.';\r\n}\r\n\r\nexport function getStatusTemperature (temp) {\r\n    return {\r\n        [temp=== 100]: 'fire',\r\n        [temp===-100]: 'ice',\r\n        [temp<=-10 && temp > -100]: 'cold',\r\n        [temp>=10 && temp < 30]: 'normal',\r\n        [temp>30 && temp < 100]: 'hot'\r\n    }[true]\r\n}\r\n\r\nexport function formatTemperature (temp) {\r\n   return Number(temp.toFixed(1))\r\n}","import React from 'react';\r\nimport { formatUnits, getStatusTemperature } from '../../helpers/utils';\r\n\r\nimport './Temperature.css';\r\n\r\nfunction Temperature(props) {\r\n  const {\r\n    temp, \r\n    tempMax, \r\n    tempMin, \r\n    humidity, \r\n    wind,\r\n    clouds\r\n  } \r\n  = props;\r\n  return (\r\n    <div className=\"temperature-view\">\r\n      <div >\r\n          <span className=\"temperature\" data-status={getStatusTemperature(temp)}>\r\n            {formatUnits(temp)}\r\n          </span>\r\n          <span>\r\n            temperature from {tempMin.toFixed(1)} to {tempMax.toFixed(1)} °С,\r\n            humidity {humidity} wind, {wind} m/s. clouds {clouds}%\r\n          </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Temperature;","import React from 'react';\r\nimport './Weather.css';\r\nimport Temperature from '../Temperature/Temperature';\r\n\r\nfunction Weather({ weather, temperature }) {\r\n\r\n    const srcWeatherIcon = `https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`;\r\n    const srcCountryIcon = `https://openweathermap.org/images/flags/${weather.sys.country.toLocaleLowerCase()}.png`;\r\n\r\n    return (\r\n        <div className=\"weather-view\">\r\n            <div className=\"weather\">\r\n                <div className=\"weather-icon\">\r\n                    <img\r\n                        src={srcWeatherIcon}\r\n                        alt=\"weather-icon\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"weather-content\">\r\n                    <div>\r\n                        <span className=\"weather-city\">\r\n                            {weather.name + ', '}\r\n                        </span>\r\n                        <span className=\"weather-country\">\r\n                            {weather.sys.country}\r\n                        </span>\r\n                        <img\r\n                            className=\"weather-country-flag\"\r\n                            src={srcCountryIcon}\r\n                            alt=\"country-flag\"\r\n                        />\r\n                        <span className=\"weather-description\">\r\n                            {weather.weather[0].description}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <Temperature\r\n                        temp={temperature}\r\n                        tempMin={weather.main.temp_min}\r\n                        tempMax={weather.main.temp_max}\r\n                        humidity={weather.main.humidity}\r\n                        wind={weather.wind.speed}\r\n                        clouds={weather.clouds.all}\r\n                    />\r\n                    <div className=\"coords\">Geo coords:\r\n                        <span>[{weather.coord.lat}, {weather.coord.lon}]</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Weather;","import React, {useState} from 'react';\r\nimport './Search.css';\r\n\r\nfunction Search({ setSearchQuery }) {\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n    const onChangeQuery = (event) => {\r\n        setQuery(event.target.value)\r\n    };\r\n\r\n    const sendQuery = (event) => {\r\n        if (event.code === 'Enter') {\r\n            setSearchQuery(event.target.value)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-view\">\r\n            <div className=\"search\">\r\n                <input\r\n                    className=\"search-input\"\r\n                    type=\"text\"\r\n                    value={query}\r\n                    onChange={onChangeQuery}\r\n                    onKeyDown={sendQuery}\r\n                    placeholder=\"Type city\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport './Slider.css';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        marginRight: 100,\r\n        marginTop: 20\r\n    },\r\n});\r\n\r\nconst marks = [\r\n    {\r\n        value: -100,\r\n        label: '-100°C',\r\n    },\r\n    {\r\n        value: -50,\r\n        label: '-50°C',\r\n    },\r\n    {\r\n        value: 0,\r\n        label: '0°C',\r\n    },\r\n    {\r\n        value: 50,\r\n        label: '50°C',\r\n    },\r\n    {\r\n        value: 100,\r\n        label: '100°C',\r\n    },\r\n];\r\n\r\nexport default function DiscreteSlider({ temperature, setTemperature }) {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTemperature(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className=\"slider-view\">\r\n            <div className={classes.root}>\r\n                <Typography id=\"discrete-slider-restrict\" gutterBottom>\r\n                    Temperature\r\n                </Typography>\r\n                <Slider\r\n                    value={temperature}\r\n                    min={-100}\r\n                    max={100}\r\n                    marks={marks}\r\n                    step={1}\r\n                    scale={(x) => x ** 10}\r\n                    valueLabelFormat={temperature.toLocaleString()}\r\n                    onChange={handleChange}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"non-linear-slider\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/error.ad8a62dc.svg\";","import React from 'react';\r\nimport './Error.css';\r\nimport src from '../../assets/icons/error.svg';\r\n\r\nfunction Error({ error }) {\r\n\r\n    return (\r\n        <div className=\"error-view\">\r\n            <div className=\"error\">\r\n                <span className=\"error-message\">{error}</span>\r\n                <img\r\n                    className=\"error-img\"\r\n                    src={src}\r\n                    alt=\"error-img\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nfunction Spinner() {\r\n\r\n    return (\r\n        <div className=\"spinner-view\">\r\n            <div className=\"loadingio-spinner-double-ring-akbya7r6j4r\"><div className=\"ldio-64ovp4fgun\">\r\n                <div></div>\r\n                <div></div>\r\n                <div><div></div></div>\r\n                <div><div></div></div>\r\n            </div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import axios from 'axios';\r\n\r\nconst openWeatherApiKey = 'cee8cad0d1dbcd913809dee4f4f8ba29';\r\n\r\nexport class ApiService {\r\n  _baseUrl = 'https://api.openweathermap.org/data/2.5/weather'\r\n\r\n  _getWeatherRequestUrl({ latitude, longitude }) {\r\n    return `${this._baseUrl}?lat=${latitude}&lon=${longitude}&units=metric&appid=${openWeatherApiKey}`;\r\n  }\r\n\r\n  async getData(url) {\r\n    try {\r\n        const response =  await axios.get(url);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw err.response.data.message;\r\n    }\r\n  }\r\n\r\n  getWeatherByQuery = async (query) => {\r\n    const url = `${this._baseUrl}?q=${query}&units=metric&appid=${openWeatherApiKey}`;\r\n    return await this.getData(url);\r\n  }\r\n\r\n  getWeatherByCoords = async (coords)  => {\r\n    return await this.getData(this._getWeatherRequestUrl(coords));\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Weather from '../Weather/Weather';\r\nimport Search from '../Search/Search';\r\nimport Slider from '../Slider/Slider';\r\nimport Error from '../Error/Error';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport { ApiService } from '../../api/index';\r\nimport { formatTemperature } from '../../helpers/utils';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const service = new ApiService();\r\n  const [weather, setWeather] = useState(null);\r\n  const [temperature, setTemperature] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onError = (error) => {\r\n    setError(error);\r\n    setLoading(false);\r\n    setWeather(null);\r\n  };\r\n\r\n  const onFetch = (fn, params) => {\r\n       setLoading(true);\r\n       fn(params).then(data => {\r\n          setWeather(data);\r\n          setTemperature(formatTemperature(data.main.temp));\r\n          setLoading(false);\r\n          setError(null);\r\n        })\r\n        .catch(error => {\r\n          onError(error);\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      function success(position) {\r\n        onFetch(service.getWeatherByCoords, position.coords);\r\n      },\r\n      function error(error) {\r\n        onError(error.message);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      onFetch(service.getWeatherByQuery, searchQuery);\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  const errorView = error && !loading && <Error error={error} />;\r\n  const weatherView = weather && !loading && <Weather weather={weather} temperature={temperature} />;\r\n  const sliderView = weather && !loading && <Slider temperature={temperature} setTemperature={setTemperature} />;\r\n  const spinnerView = loading && <Spinner />;\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\">\r\n        Weather app\r\n      </header>\r\n      <main className=\"main\">\r\n        <div>\r\n          <h1>Weather in your city</h1>\r\n        </div>\r\n        <Search\r\n          setSearchQuery={setSearchQuery}\r\n        />\r\n        {weatherView}\r\n        {errorView}\r\n        {spinnerView}\r\n        {sliderView}\r\n      </main>\r\n      <footer className=\"footer\">\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}